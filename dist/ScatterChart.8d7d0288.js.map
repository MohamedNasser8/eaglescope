{"version":3,"sources":["component/VisualTools/Chart/ScatterChart.js"],"names":["ScatterChart","props","self","React","createRef","state","margin","top","right","bottom","left","loading","error","data","filter","d","fields","x","y","z","f","width","xScale","d3","scaleBand","domain","map","range","padding","scaleLiner","scaleLinear","extent","nice","filters","length","circles","attr","filterData","includes","setTimeout","rect","current","getBoundingClientRect","innerWidth","innerHeight","height","svg","select","append","viewer","createScaleLiner","yScale","radiusScale","call","axisBottom","tickSize","axisLeft","selectAll","enter","brush","on","end","bind","brush_area","componentDidUpdate","event","selection","brush_coords","i","nodes","node","cx","cy","isBrushed","x0","y0","x1","y1","console","log","id","title","field","operation","values","numFixed","invert","filterAdded","move","bars","fill","PureComponent"],"mappings":"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","file":"ScatterChart.8d7d0288.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react'\nimport {numFixed} from '../../../common/utils.js'; \nimport * as d3 from \"d3\";\nexport default class ScatterChart extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.self = React.createRef();\n        this.state = {\n            margin: {top: 10, right: 10, bottom: 25, left: 40},\n            loading:true,\n            error:null\n        }\n        this.state.data = this.props.data.filter(d=> d[this.props.fields.x]!='N/A'&&d[this.props.fields.y]!='N/A'&&d[this.props.fields.z]!='N/A' )\n    }\n\n    createXScale(f,width) {\n        // set the ranges\n        const xScale = d3.scaleBand()\n            .domain(this.state.data.map(function(d) { return d[f]; }))\n            .range([0, width])\n            .padding(0.1);\n\n        // xScale.invert = function(x) {\n        //     var domain = this.domain();\n        //     var range = this.range()\n        //     var scale = d3.scaleQuantize().domain(range).range(domain)\n        //     return scale(x)\n        // }\n        return xScale;\n    }\n\n    createScaleLiner(f, range) {\n        const scaleLiner = d3.scaleLinear()\n        .domain(d3.extent(this.state.data, d=>d[f]))\n        .range(range)\n        .nice();\n        return scaleLiner;\n    }\n\n    componentDidUpdate(){\n\n        if(this.props.filters.length > 0){\n            this.circles.attr('class', d=> this.props.filterData.includes(d)?'brushed':'non_brushed')\n        }else{\n            this.circles.attr('class','brushed')\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            const rect = this.self.current.getBoundingClientRect();\n            const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n            const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n            // create svg \n            const svg = d3.select(this.self.current)\n            .append(\"svg\")\n                .attr(\"width\", rect.width)\n                .attr(\"height\", rect.height)\n            // create viewer\n            const viewer = svg.append(\"g\")\n                .attr(\"transform\", \"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\");\n            //\n            this.xScale = this.createScaleLiner(this.props.fields.x, [0, innerWidth]);\n            this.yScale = this.createScaleLiner(this.props.fields.y, [innerHeight, 0]);\n    \n            this.radiusScale = this.createScaleLiner(this.props.fields.z, [3, 10]);\n    \n            viewer.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n            .call(d3.axisBottom(this.xScale).tickSize(-innerHeight));\n            \n            // add the y Axis\n            viewer.append(\"g\")\n                .call(d3.axisLeft(this.yScale).tickSize(-innerWidth));\n    \n    \n    \n            this.circles = viewer.selectAll(\"circle\").data(this.state.data)\n            .enter().append(\"circle\")\n            .attr(\"r\", d => this.props.fields.z ? this.radiusScale(d[this.props.fields.z]) : 3)\n            .attr(\"cx\", d => this.xScale(d[this.props.fields.x]))\n            .attr(\"cy\", d => this.yScale(d[this.props.fields.y]))\n            .attr(\"class\", \"brushed\");\n    \n    \n    \n            this.brush = d3.brush().extent([[0,0],[innerWidth, innerHeight]])\n                //.on(\"brush\", this.brushed.bind(this))\n                .on(\"end\", this.end.bind(this)); \n    \n            this.brush_area = viewer.append(\"g\")\n            \n            .call(this.brush);\n            \n            this.componentDidUpdate()        \n        }, 500);\n        \n        \n    }\n    brushed(){\n        if (d3.event.selection != null) {\n            // revert circles to initial style\n            this.circles.attr(\"class\", \"non_brushed\");\n            // d3.event.selection\n            var brush_coords = d3.event.selection\n            // // style brushed circles\n            this.circles.filter(function(d,i,nodes){\n                      const node = nodes[i]\n                       var cx = d3.select(node).attr(\"cx\"),\n                           cy = d3.select(node).attr(\"cy\");\n                       return this.isBrushed(brush_coords, cx, cy);\n                   }.bind(this))\n                   .attr(\"class\", \"brushed\");\n        }\n    }\n    end(){\n        \n        if (!d3.event.selection) return;\n        var [x0, y0] = d3.event.selection[0],\n        [x1, y1] = d3.event.selection[1];\n        console.log('end', d3.event.selection)\n        const filters = [\n            {\n                id:this.props.id,\n                title:this.props.title,\n                field:this.props.fields.x,\n                operation:'range',\n                values:[numFixed(this.xScale.invert(x0)),numFixed(this.xScale.invert(x1))]\n            },\n            {\n                id:this.props.id,\n                title:this.props.title,\n                field:this.props.fields.y,\n                operation:'range',\n                values:[numFixed(this.yScale.invert(y1)),numFixed(this.yScale.invert(y0))]\n            }\n        ]\n        console.log(filters)\n        this.props.filterAdded(filters)\n        this.brush_area.call(this.brush.move, null);\n\n\n\n    }\n    createBrush(){\n    }\n\n    isBrushed(brush_coords, cx, cy) {\n        var [x0, y0] = brush_coords[0],\n            [x1, y1] = brush_coords[1];\n       return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;\n   }\n\n    render() {\n        return (\n            <div\n              id={this.props.id}\n              ref={this.self}\n              style={{ width: \"100%\", height: \"100%\" }}\n            ></div>\n        );\n        return (\n        <div >\n          <svg width={this.props.width} height={this.props.height}>\n            {this.state.bars.map((d, i) => (\n              <rect\n                key={i}\n                x={d.x}\n                y={d.y}\n                width=\"2\"\n                height={d.height}\n                fill={d.fill}\n              />\n            ))}\n            <g>\n              <g\n                ref=\"xAxis\"\n                transform={`translate(0, ${height - margin.bottom})`}\n              />\n              <g ref=\"yAxis\" transform={`translate(${margin.left}, 0)`} />\n              <g ref=\"brush\" />\n            </g>\n          </svg>\n          </div>\n        );\n      }\n}\n"]}
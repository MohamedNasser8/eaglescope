{"version":3,"sources":["component/VisualTools/Chart/HorizontalBarChart.js"],"names":["HorizontalBarChart","props","self","React","createRef","state","margin","top","right","bottom","left","loading","error","fields","y","x","data","transform","field","new_data","d3","nest","key","d","sortKeys","ascending","rollup","v","length","entries","svg","f","height","yScale","scaleBand","domain","map","range","padding","width","xScale","scaleLinear","max","selection","className","update_bars","selectAll","enter_bars","enter","append","attr","bandwidth","bind","on","i","selected","filter","value","id","title","operation","values","filterAdded","text","merge","transition","duration","exit","remove","filters","filterData","filterbars","drawBar","viewer","createTextLabel","setTimeout","rect","current","getBoundingClientRect","innerWidth","innerHeight","select","createXScale","createYScale","call","axisBottom","tickSize","bars","componentDidUpdate","fill","PureComponent"],"mappings":"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","file":"HorizontalBarChart.ff0fe6a7.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from 'react'\nimport {isEquivalent} from '../../../common/utils.js'\nimport * as d3 from \"d3\";\n\nexport default class HorizontalBarChart extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.self = React.createRef();\n        this.state = {\n            margin: {top: 10, right: 10, bottom: 35, left: 10},\n            loading:true,\n            error:null,\n            fields:{y:'key',x:'value'}\n        }\n        this.state.data = this.transform(this.props.data, this.props.fields.y);\n\n    }\n    transform(data,field){\n        const new_data =  d3.nest()\n            .key(function(d) { return d[field]; })\n            .sortKeys(d3.ascending)\n            .rollup(function(v) { return v.length; })\n            .entries(data);\n        return new_data;\n\n    }\n    createXAixs(svg) {\n\n    }\n\n    createYAixs(svg) {\n\n    }\n\n    createYScale(f,height) {\n        // set the ranges\n        const yScale = d3.scaleBand()\n            .domain(this.state.data.map(function(d) { return d[f]; }))\n            .range([height, 0])\n            .padding(0.1);\n        return yScale;\n    }\n\n    createXScale(f, width) {\n        const xScale = d3.scaleLinear()\n        .domain([0, d3.max(this.state.data, function(d) { return d[f]; })])\n        .range([0, width]);\n        return xScale;\n    }\n\n    drawBar(selection, data, className='og') {\n        const update_bars = selection.selectAll(`rect.${className}`).data(data,d=> d[this.state.fields.y])\n\n        const enter_bars = update_bars.enter().append('rect')\n        enter_bars.attr('class', `${className}`)\n            .attr(\"x\", 0)\n            .attr(\"height\", this.yScale.bandwidth())\n            .attr(\"y\",function(d) { return this.yScale(d[this.state.fields.y])}.bind(this))\n            enter_bars.on('click', (data,i) =>{\n                //enter_bars.attr('opacity',0.2)\n                const selected = enter_bars.filter(function(d){\n                  return d === data\n                })\n                //selected.attr('opacity',1)\n                const value = selected.data()[0].key\n                const filter = {\n                    id:this.props.id,\n                    title:this.props.title,\n                    field:this.props.fields.y,\n                    operation:'eq',\n                    values:value\n                }\n                this.props.filterAdded([filter])\n            })\n\n        enter_bars.append('title').text(d=> `${d.key}:${d.value}`)\n\n        update_bars.merge(enter_bars)\n            .transition().duration(1000)\n            .attr(\"width\", function(d) { return this.xScale(d[this.state.fields.x]); }.bind(this))\n            .selectAll('.label').text(d=>d.key)\n        // update_bars\n\n        update_bars.exit()\n            .transition().duration(1000)\n            .attr('width',0).remove()\n\n        return update_bars;\n\n    }\n\n    componentDidUpdate() {\n        // console.log('bar update',this.props)\n        let data = [];\n        if(this.props.filters.length > 0){\n            data = this.transform(this.props.filterData, this.props.fields.y)\n        }else{\n            data = this.transform(this.props.data, this.props.fields.y)\n        }\n        this.filterbars= this.drawBar(this.viewer,data,'ft');\n        this.createTextLabel();\n    }\n\n    componentDidMount() {\n        setTimeout(()=>{\n            const rect = this.self.current.getBoundingClientRect();\n            const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n            this.innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n            // create svg\n            const svg = d3.select(this.self.current)\n            .append(\"svg\")\n                .attr(\"width\", rect.width)\n                .attr(\"height\", rect.height)\n            // create viewer\n            this.viewer = svg.append(\"g\")\n                .attr(\"transform\", \"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\");\n            //\n            this.xScale = this.createXScale(this.state.fields.x, innerWidth);\n            this.yScale = this.createYScale(this.state.fields.y, this.innerHeight);\n\n            this.viewer.append(\"g\")\n            .attr(\"transform\", `translate(0,${this.innerHeight})`)\n            .call(d3.axisBottom(this.xScale).tickSize(-this.innerHeight))\n\n            this.bars = this.drawBar(this.viewer, this.state.data,'og')\n            this.filterbars = this.drawBar(this.viewer, this.state.data,'ft')\n            this.createTextLabel();\n\n            this.componentDidUpdate()\n        }, 500);\n\n\n\n\n        // add the y Axis\n        // this.viewer.append(\"g\")\n        //     .call(d3.axisLeft(this.yScale));\n\n    }\n    createTextLabel(){\n        this.viewer.selectAll('.label').remove();\n        this.viewer.selectAll('.label').data(this.state.data,d=>d[this.state.fields.y]).enter()\n        .append('text')\n        .attr('class','label')\n        .attr('x', 5)\n        .attr('y', function(d) { return this.yScale(d[this.state.fields.y])+this.yScale.bandwidth()/2+4}.bind(this))\n        .text(d=>d.key)\n    }\n    render() {\n        return (\n            <div\n              id={this.props.id}\n              ref={this.self}\n              style={{ width: \"100%\", height: \"100%\" }}\n            ></div>\n        );\n        return (\n        <div >\n          <svg width={this.props.width} height={this.props.height}>\n            {this.state.bars.map((d, i) => (\n              <rect\n                key={i}\n                x={d.x}\n                y={d.y}\n                width=\"2\"\n                height={d.height}\n                fill={d.fill}\n              />\n            ))}\n            <g>\n              <g\n                ref=\"xAxis\"\n                transform={`translate(0, ${height - margin.bottom})`}\n              />\n              <g ref=\"yAxis\" transform={`translate(${margin.left}, 0)`} />\n              <g ref=\"brush\" />\n            </g>\n          </svg>\n          </div>\n        );\n      }\n}\n"]}
{"version":3,"sources":["component/VisualTools/Chart/PieChart.js"],"names":["PureComponent","PieChart","props","self","React","createRef","tooltip","state","margin","top","right","bottom","left","loading","error","data","d3","nest","key","d","fields","x","rollup","v","length","entries","forEach","selected","sum","value","filters","filter","f","id","pies","attr","color","setTimeout","rect","current","getBoundingClientRect","innerWidth","width","innerHeight","height","radius","Math","min","arcs","pie","sortValues","a","b","arc","innerRadius","outerRadius","scaleOrdinal","domain","map","range","quantize","t","interpolateSpectral","viewer","select","append","selectAll","join","on","i","console","log","values","reduce","push","title","field","operation","filterAdded","filterRemove","text","format"],"mappings":"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","file":"PieChart.2c12554d.js","sourceRoot":"../source","sourcesContent":["import React, { PureComponent } from \"react\";\nimport * as d3 from \"d3\";\n\nexport default class PieChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.self = React.createRef();\n    this.tooltip = React.createRef();\n    this.state = {\n      margin: { top: 5, right: 5, bottom: 5, left: 5 },\n      loading: true,\n      error: null\n    };\n\n    const data = d3.nest()\n      .key(function (d) { return d[props.fields.x]; })\n\n      .rollup(function (v) { return v.length; })\n      .entries(props.data)\n    data.forEach(d => {\n      d.selected = false;\n    })\n    this.state.data = data;\n    this.sum = d3.sum(this.state.data, d => d.value)\n\n  }\n\n  componentDidUpdate() {\n    // console.log('pie did update')\n    const filters = this.props.filters.filter(f => f.id == this.props.id)\n    if (filters.length > 0) { // has filters\n      this.pies\n        .attr(\"fill\", d => d.data.selected ? this.color(d.data.key) : '#C0C0C0')\n        .attr('fill-opacity', d => d.data.selected ? 1 : .5)\n        .attr('stroke', '#CCCCCC')\n        .attr('stroke-width', d => d.data.selected ? 3 : 0)\n    } else {\n      this.state.data.forEach(d => d.selected = false)\n      this.pies.attr(\"fill\", d => this.color(d.data.key))\n        .attr('fill-opacity', 1)\n        .attr('stroke', 'none')\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n\n\n      const rect = this.self.current.getBoundingClientRect();\n      const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n      const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n      const radius = Math.min(innerWidth, innerHeight) / 2\n      const pie = d3.pie().sortValues((a, b) => b - a).value(d => d.value)\n\n      const arcs = pie(this.state.data);\n\n      const arc = d3.arc().innerRadius(0).outerRadius(radius)\n\n      const arcLabel = d3.arc().innerRadius(radius).outerRadius(radius);\n\n      this.color = d3.scaleOrdinal()\n        .domain(this.state.data.map(d => d.key))\n        .range(d3.quantize(t => d3.interpolateSpectral(t), this.state.data.length))\n\n      const svg = d3.select(this.self.current)\n        .append(\"svg\")\n        .attr(\"width\", rect.width)\n        .attr(\"height\", rect.height)\n\n      const viewer = svg.append(\"g\")\n        //.attr(\"stroke\", \"white\")\n        .attr(\"transform\", `translate(${(innerWidth / 2 + this.state.margin.left)},${innerHeight / 2 + this.state.margin.top})`)\n\n      this.pies = viewer.selectAll(\"path\")\n        .data(arcs)\n        .join(\"path\")\n        .attr(\"class\", \"slide\")\n        // .attr(\"id\",(d,i)=>i)\n        .attr(\"fill\", d => this.color(d.data.key))\n        .attr(\"d\", arc)\n        .on('click', (d, i) => {\n          // viewer.selectAll(\".slide\").attr('opacity',0.2)\n          // const selected = this.pies.filter(function(d){\n          //   return d === data\n          // })\n          console.log('click')\n          d.data.selected = !d.data.selected;\n          const values = this.state.data.reduce((values, d) => {\n            if (d.selected) values.push(d.key)\n            return values;\n          }, [])\n\n\n          if (values.length > 0) { // has filters\n            this.pies\n              .attr(\"fill\", d => d.data.selected ? this.color(d.data.key) : '#C0C0C0')\n              .attr('fill-opacity', d => d.data.selected ? 1 : .5)\n              .attr('stroke', '#CCCCCC')\n              .attr('stroke-width', d => d.data.selected ? 3 : 0)\n            const filter = {\n              id: this.props.id,\n              title: this.props.title,\n              field: this.props.fields.x,\n              operation: 'in',\n              values: values\n            }\n            this.props.filterAdded([filter])\n          } else {\n            this.pies.attr(\"fill\", d => this.color(d.data.key))\n              .attr('fill-opacity', 1)\n              .attr('stroke', 'none')\n\n            this.props.filterRemove(this.props.id)\n          }\n\n        })\n      this.pies.append('title').text(d => `${d.data.key}:${d.data.value}:${d3.format(\".0%\")(d.data.value / this.sum)}`)\n\n      //this.componentDidUpdate();\n    }, 500)\n    //   .on(\"mousemove\", function(d){\n    //     console.log(this)\n    //     d3.select(this.tooltip.current)\n    //       .style(\"left\", 0 + \"px\")\n    //       .style(\"top\", 0 + \"px\")\n    //       .style(\"display\", \"inline-block\")\n    //       .style(\"position\", \"absolute\")\n    //       .style(\"color\",\"grey\")\n    //       .style(\"background\",\"white\")\n    //       .style(\"z-index\",999)\n    //       .html( (d.data[this.state.fields.x]) + \"<br>\" +(d.value));\n    // }.bind(this))\n    // .on(\"mouseout\", function(d){ d3.select(this.tooltip.current).style(\"display\", \"none\");}.bind(this));\n\n    // svg.append(\"g\")\n    //     .attr(\"font-family\", \"sans-serif\")\n    //     .attr(\"font-size\", 12)\n    //     .attr(\"text-anchor\", \"middle\")\n    //   .selectAll(\"text\")\n    //   .data(arcs)\n    //   .join(\"text\")\n    //     .attr(\"transform\", d => `translate(${arcLabel.centroid(d)})`)\n    //     .call(text => text.append(\"tspan\")\n    //         .attr(\"y\", \"-0.4em\")\n    //         .attr(\"font-weight\", \"bold\")\n    //         .text(d => d.data[this.state.fields.x]))\n    //     .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append(\"tspan\")\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", \"0.7em\")\n    //         .attr(\"fill-opacity\", 0.7)\n    //         .text(d => d.data[this.state.fields.y].toLocaleString()));\n\n  }\n\n  render() {\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <div\n          id={this.props.id}\n          ref={this.self}\n          style={{ width: \"100%\", height: \"100%\" }}\n        ></div>\n        <div ref={this.tooltip} className=\"tooltip\" ></div>\n      </div>\n    );\n  }\n}\n"]}